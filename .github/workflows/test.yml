name: Test

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'docs/**'

jobs:
  test:
    name: Test py${{ matrix.python-version }} with ${{ matrix.db_name }}
    runs-on: ubuntu-latest
    timeout-minutes: 8
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        db:
          - "postgres://postgres:postgres@localhost/postgres"
          - "sqlite:///takahe.db"
        include:
          - db: "postgres://postgres:postgres@localhost/postgres"
            db_name: postgres
            search: true
          - db: "sqlite:///takahe.db"
            db_name: sqlite
            search: false
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
      - name: Run pytest
        env:
          TAKAHE_DATABASE_SERVER: ${{ matrix.db }}
          TAKAHE_SEARCH: ${{ matrix.search }}
          TAKAHE_ENVIRONMENT: "test"
          TAKAHE_SECRET_KEY: "testing_secret"
          TAKAHE_MAIN_DOMAIN: "example.com"
        run: |
          python -m pytest

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
      - name: set PY
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit
        continue-on-error: true
        run: |
          pre-commit run -a --show-diff-on-failure
      - name: Run pre-commit again to make sure no changes are manual
        run: |
          pre-commit run -a --show-diff-on-failure
      - name: Save changes made by pre-commit
        if: always()
        run: |
          if [[ `git status --porcelain` ]]; then
            git config user.name "Takahe Workflow"
            git config user.email "<>"
            git commit -am "Saving automated pre-commit changes."
            git push
          fi
        shell: bash

